{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yoges\\\\OneDrive\\\\Desktop\\\\Expenses Tracker\\\\frontend\\\\src\\\\context\\\\globalContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:5000/api/v1/\";\nconst GlobalContext = /*#__PURE__*/React.createContext();\nexport const GlobalProvider = ({\n  children\n}) => {\n  _s();\n  const [incomes, setIncomes] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [error, setError] = useState(null);\n\n  // Function to check for HTTP errors\n  const checkError = response => {\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n    return response;\n  };\n\n  // Add income using fetch\n  const addIncome = async income => {\n    try {\n      const response = await fetch(`${BASE_URL}add-income`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(income)\n      });\n      checkError(response);\n      await getIncomes(); // Fetch the latest incomes after adding\n    } catch (error) {\n      setError(error.message);\n      console.error('Error adding income:', error);\n    }\n  };\n\n  // Get incomes using fetch\n  const getIncomes = async () => {\n    try {\n      const response = await fetch(`${BASE_URL}get-incomes`);\n      checkError(response);\n      const data = await response.json();\n      setIncomes(data);\n    } catch (error) {\n      setError(error.message);\n      console.error('Error fetching incomes:', error);\n    }\n  };\n\n  // Delete income using fetch\n  const deleteIncome = async id => {\n    try {\n      const response = await fetch(`${BASE_URL}delete-income/${id}`, {\n        method: 'DELETE'\n      });\n      checkError(response);\n      await getIncomes(); // Fetch the latest incomes after deletion\n    } catch (error) {\n      setError(error.message);\n      console.error('Error deleting income:', error);\n    }\n  };\n\n  // Calculate total income\n  const totalIncome = () => {\n    return incomes.reduce((total, income) => total + income.amount, 0);\n  };\n\n  // Add expense using fetch\n  const addExpense = async expense => {\n    try {\n      const response = await fetch(`${BASE_URL}add-expense`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(expense)\n      });\n      checkError(response);\n      await getExpenses(); // Fetch the latest expenses after adding\n    } catch (error) {\n      setError(error.message);\n      console.error('Error adding expense:', error);\n    }\n  };\n\n  // Get expenses using fetch\n  const getExpenses = async () => {\n    try {\n      const response = await fetch(`${BASE_URL}get-expenses`);\n      checkError(response);\n      const data = await response.json();\n      setExpenses(data);\n    } catch (error) {\n      setError(error.message);\n      console.error('Error fetching expenses:', error);\n    }\n  };\n\n  // Delete expense using fetch\n  const deleteExpense = async id => {\n    try {\n      const response = await fetch(`${BASE_URL}delete-expense/${id}`, {\n        method: 'DELETE'\n      });\n      checkError(response);\n      await getExpenses(); // Fetch the latest expenses after deletion\n    } catch (error) {\n      setError(error.message);\n      console.error('Error deleting expense:', error);\n    }\n  };\n\n  // Calculate total expenses\n  const totalExpenses = () => {\n    return expenses.reduce((total, expense) => total + expense.amount, 0);\n  };\n\n  // Calculate total balance\n  const totalBalance = () => {\n    return totalIncome() - totalExpenses();\n  };\n\n  // Transaction history\n  const transactionHistory = () => {\n    const history = [...incomes, ...expenses];\n    history.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n    return history.slice(0, 3);\n  };\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      addIncome,\n      getIncomes,\n      incomes,\n      deleteIncome,\n      expenses,\n      totalIncome,\n      addExpense,\n      getExpenses,\n      deleteExpense,\n      totalExpenses,\n      totalBalance,\n      transactionHistory,\n      error,\n      setError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n};\n_s(GlobalProvider, \"tEtYkz3TSUkMCKA3FBENwBvPpJ4=\");\n_c = GlobalProvider;\nexport const useGlobalContext = () => {\n  _s2();\n  return useContext(GlobalContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"names":["React","useContext","useState","jsxDEV","_jsxDEV","BASE_URL","GlobalContext","createContext","GlobalProvider","children","_s","incomes","setIncomes","expenses","setExpenses","error","setError","checkError","response","ok","Error","status","addIncome","income","fetch","method","headers","body","JSON","stringify","getIncomes","message","console","data","json","deleteIncome","id","totalIncome","reduce","total","amount","addExpense","expense","getExpenses","deleteExpense","totalExpenses","totalBalance","transactionHistory","history","sort","a","b","Date","createdAt","slice","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGlobalContext","_s2","$RefreshReg$"],"sources":["C:/Users/yoges/OneDrive/Desktop/Expenses Tracker/frontend/src/context/globalContext.js"],"sourcesContent":["import React, { useContext, useState } from \"react\"\r\n\r\nconst BASE_URL = \"http://localhost:5000/api/v1/\";\r\n\r\nconst GlobalContext = React.createContext()\r\n\r\nexport const GlobalProvider = ({children}) => {\r\n\r\n    const [incomes, setIncomes] = useState([])\r\n    const [expenses, setExpenses] = useState([])\r\n    const [error, setError] = useState(null)\r\n\r\n    // Function to check for HTTP errors\r\n    const checkError = (response) => {\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n        return response;\r\n    }\r\n\r\n    // Add income using fetch\r\n    const addIncome = async (income) => {\r\n        try {\r\n            const response = await fetch(`${BASE_URL}add-income`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(income)\r\n            });\r\n            checkError(response);\r\n            await getIncomes(); // Fetch the latest incomes after adding\r\n        } catch (error) {\r\n            setError(error.message);\r\n            console.error('Error adding income:', error);\r\n        }\r\n    }\r\n\r\n    // Get incomes using fetch\r\n    const getIncomes = async () => {\r\n        try {\r\n            const response = await fetch(`${BASE_URL}get-incomes`);\r\n            checkError(response);\r\n            const data = await response.json();\r\n            setIncomes(data);\r\n        } catch (error) {\r\n            setError(error.message);\r\n            console.error('Error fetching incomes:', error);\r\n        }\r\n    }\r\n\r\n    // Delete income using fetch\r\n    const deleteIncome = async (id) => {\r\n        try {\r\n            const response = await fetch(`${BASE_URL}delete-income/${id}`, {\r\n                method: 'DELETE',\r\n            });\r\n            checkError(response);\r\n            await getIncomes(); // Fetch the latest incomes after deletion\r\n        } catch (error) {\r\n            setError(error.message);\r\n            console.error('Error deleting income:', error);\r\n        }\r\n    }\r\n\r\n    // Calculate total income\r\n    const totalIncome = () => {\r\n        return incomes.reduce((total, income) => total + income.amount, 0);\r\n    }\r\n\r\n    // Add expense using fetch\r\n    const addExpense = async (expense) => {\r\n        try {\r\n            const response = await fetch(`${BASE_URL}add-expense`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(expense)\r\n            });\r\n            checkError(response);\r\n            await getExpenses(); // Fetch the latest expenses after adding\r\n        } catch (error) {\r\n            setError(error.message);\r\n            console.error('Error adding expense:', error);\r\n        }\r\n    }\r\n\r\n    // Get expenses using fetch\r\n    const getExpenses = async () => {\r\n        try {\r\n            const response = await fetch(`${BASE_URL}get-expenses`);\r\n            checkError(response);\r\n            const data = await response.json();\r\n            setExpenses(data);\r\n        } catch (error) {\r\n            setError(error.message);\r\n            console.error('Error fetching expenses:', error);\r\n        }\r\n    }\r\n\r\n    // Delete expense using fetch\r\n    const deleteExpense = async (id) => {\r\n        try {\r\n            const response = await fetch(`${BASE_URL}delete-expense/${id}`, {\r\n                method: 'DELETE',\r\n            });\r\n            checkError(response);\r\n            await getExpenses(); // Fetch the latest expenses after deletion\r\n        } catch (error) {\r\n            setError(error.message);\r\n            console.error('Error deleting expense:', error);\r\n        }\r\n    }\r\n\r\n    // Calculate total expenses\r\n    const totalExpenses = () => {\r\n        return expenses.reduce((total, expense) => total + expense.amount, 0);\r\n    }\r\n\r\n    // Calculate total balance\r\n    const totalBalance = () => {\r\n        return totalIncome() - totalExpenses();\r\n    }\r\n\r\n    // Transaction history\r\n    const transactionHistory = () => {\r\n        const history = [...incomes, ...expenses];\r\n        history.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\r\n        return history.slice(0, 3);\r\n    }\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{\r\n            addIncome,\r\n            getIncomes,\r\n            incomes,\r\n            deleteIncome,\r\n            expenses,\r\n            totalIncome,\r\n            addExpense,\r\n            getExpenses,\r\n            deleteExpense,\r\n            totalExpenses,\r\n            totalBalance,\r\n            transactionHistory,\r\n            error,\r\n            setError\r\n        }}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useGlobalContext = () => {\r\n    return useContext(GlobalContext)\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}