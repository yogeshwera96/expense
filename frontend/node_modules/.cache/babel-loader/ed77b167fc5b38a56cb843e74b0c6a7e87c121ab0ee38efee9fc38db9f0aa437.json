{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yoges\\\\OneDrive\\\\Desktop\\\\Expenses Tracker\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from 'react';\nimport styled from \"styled-components\";\nimport bg from './img/bg.png';\nimport { MainLayout } from './styles/Layouts';\nimport Orb from './Components/Orb/Orb';\nimport Navigation from './Components/Navigation/Navigation';\nimport Dashboard from './Components/Dashboard/Dashboard';\nimport Income from './Components/Income/Income';\nimport Expenses from './Components/Expenses/Expenses';\nimport Home from './pages/Home'; // Import the Home component\nimport { useGlobalContext } from './context/globalContext';\nimport { useAuthContext } from './context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    user\n  } = useAuthContext(); // Get user authentication status\n  const [active, setActive] = useState(1); // Set 1 as Home initially\n\n  const global = useGlobalContext();\n  console.log(global);\n\n  // Function to conditionally render components based on active state\n  const displayData = () => {\n    switch (active) {\n      case 1:\n        return /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 16\n        }, this);\n      // Home is always visible\n      case 2:\n        return user ? /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 23\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You must be logged in to view the dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 39\n        }, this);\n      // Dashboard visible only if logged in\n      case 3:\n        return user ? /*#__PURE__*/_jsxDEV(Income, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 23\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You must be logged in to view income\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 36\n        }, this);\n      // Income visible only if logged in\n      case 4:\n        return user ? /*#__PURE__*/_jsxDEV(Expenses, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 23\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You must be logged in to view expenses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 38\n        }, this);\n      // Expenses visible only if logged in\n      default:\n        return /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 16\n        }, this);\n      // Default to Home\n    }\n  };\n  const orbMemo = useMemo(() => {\n    return /*#__PURE__*/_jsxDEV(Orb, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AppStyled, {\n    bg: bg,\n    className: \"App\",\n    children: [orbMemo, /*#__PURE__*/_jsxDEV(MainLayout, {\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {\n        active: active,\n        setActive: setActive\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: displayData()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"h0jRNVealslqYgmEJg3xc/c8HIw=\", false, function () {\n  return [useAuthContext, useGlobalContext];\n});\n_c = App;\nconst AppStyled = styled.div`\n  height: 100vh;\n  background-image: url(${props => props.bg});\n  position: relative;\n  main{\n    flex: 1;\n    background: rgba(252, 246, 249, 0.78);\n    border: 3px solid #FFFFFF;\n    backdrop-filter: blur(4.5px);\n    border-radius: 32px;\n    overflow-x: hidden;\n    &::-webkit-scrollbar{\n      width: 0;\n    }\n  }\n    p {\n    padding: 10px;\n    }\n`;\n_c2 = AppStyled;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AppStyled\");","map":{"version":3,"names":["React","useState","useMemo","styled","bg","MainLayout","Orb","Navigation","Dashboard","Income","Expenses","Home","useGlobalContext","useAuthContext","jsxDEV","_jsxDEV","App","_s","user","active","setActive","global","console","log","displayData","fileName","_jsxFileName","lineNumber","columnNumber","children","orbMemo","AppStyled","className","_c","div","props","_c2","$RefreshReg$"],"sources":["C:/Users/yoges/OneDrive/Desktop/Expenses Tracker/frontend/src/App.js"],"sourcesContent":["import React, { useState, useMemo } from 'react';\nimport styled from \"styled-components\";\nimport bg from './img/bg.png';\nimport { MainLayout } from './styles/Layouts';\nimport Orb from './Components/Orb/Orb';\nimport Navigation from './Components/Navigation/Navigation';\nimport Dashboard from './Components/Dashboard/Dashboard';\nimport Income from './Components/Income/Income';\nimport Expenses from './Components/Expenses/Expenses';\nimport Home from './pages/Home'; // Import the Home component\nimport { useGlobalContext } from './context/globalContext';\nimport { useAuthContext } from './context/AuthContext';\n\n\nfunction App() {\n  const { user } = useAuthContext();  // Get user authentication status\n  const [active, setActive] = useState(1);  // Set 1 as Home initially\n\n  const global = useGlobalContext();\n  console.log(global);\n\n  // Function to conditionally render components based on active state\n  const displayData = () => {\n    switch (active) {\n      case 1:\n        return <Home />;  // Home is always visible\n      case 2:\n        return user ? <Dashboard /> : <p>You must be logged in to view the dashboard</p>;  // Dashboard visible only if logged in\n      case 3:\n        return user ? <Income /> : <p>You must be logged in to view income</p>;  // Income visible only if logged in\n      case 4: \n        return user ? <Expenses /> : <p>You must be logged in to view expenses</p>;  // Expenses visible only if logged in\n      default: \n        return <Home />;  // Default to Home\n    }\n  };\n\n  const orbMemo = useMemo(() => {\n    return <Orb />;\n  }, []);\n\n  return (\n    <AppStyled bg={bg} className=\"App\">\n      {orbMemo}\n      <MainLayout>\n        <Navigation active={active} setActive={setActive} />\n        <main>\n          {displayData()}\n        </main>\n      </MainLayout>\n    </AppStyled>\n  );\n}\n\nconst AppStyled = styled.div`\n  height: 100vh;\n  background-image: url(${props => props.bg});\n  position: relative;\n  main{\n    flex: 1;\n    background: rgba(252, 246, 249, 0.78);\n    border: 3px solid #FFFFFF;\n    backdrop-filter: blur(4.5px);\n    border-radius: 32px;\n    overflow-x: hidden;\n    &::-webkit-scrollbar{\n      width: 0;\n    }\n  }\n    p {\n    padding: 10px;\n    }\n`;\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}