{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useAuthContext } from './useAuthContext';\nexport const useSignup = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const {\n    dispatch\n  } = useAuthContext();\n  const signup = async (email, password) => {\n    setIsLoading(true);\n    setError(null);\n    const response = await fetch('/api/user/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    let json;\n    try {\n      json = await response.json();\n    } catch (e) {\n      console.log(\"Response is not JSON:\", response);\n      setError(\"Failed to parse response from the server\");\n      setIsLoading(false);\n      return;\n    }\n    console.log(json); // Log response to see the content\n\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.error || 'Something went wrong');\n    } else {\n      localStorage.setItem('user', JSON.stringify(json));\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      });\n      setIsLoading(false);\n    }\n  };\n};\n_s(useSignup, \"2o2oUdrJP220M1JG8l7hQABh7Ks=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useAuthContext","useSignup","_s","error","setError","isLoading","setIsLoading","dispatch","signup","email","password","response","fetch","method","headers","body","JSON","stringify","json","e","console","log","ok","localStorage","setItem","type","payload"],"sources":["C:/Users/yoges/OneDrive/Desktop/Expenses Tracker/frontend/src/hooks/useSignup.js"],"sourcesContent":["import { useState } from 'react'\r\nimport { useAuthContext } from './useAuthContext'\r\n\r\nexport const useSignup = () => {\r\n  const [error, setError] = useState(null)\r\n  const [isLoading, setIsLoading] = useState(null)\r\n  const { dispatch } = useAuthContext()\r\n\r\n  const signup = async (email, password) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n  \r\n    const response = await fetch('/api/user/signup', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ email, password })\r\n    });\r\n  \r\n    let json;\r\n    try {\r\n      json = await response.json();\r\n    } catch (e) {\r\n      console.log(\"Response is not JSON:\", response);\r\n      setError(\"Failed to parse response from the server\");\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n  \r\n    console.log(json); // Log response to see the content\r\n  \r\n    if (!response.ok) {\r\n      setIsLoading(false);\r\n      setError(json.error || 'Something went wrong');\r\n    } else {\r\n      localStorage.setItem('user', JSON.stringify(json));\r\n      dispatch({ type: 'LOGIN', payload: json });\r\n      setIsLoading(false);\r\n    }\r\n    }  }\r\n  "],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM;IAAEQ;EAAS,CAAC,GAAGP,cAAc,CAAC,CAAC;EAErC,MAAMQ,MAAM,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACxCJ,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IAEd,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAkB,EAAE;MAC/CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,KAAK;QAAEC;MAAS,CAAC;IAC1C,CAAC,CAAC;IAEF,IAAIQ,IAAI;IACR,IAAI;MACFA,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOC,CAAC,EAAE;MACVC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEV,QAAQ,CAAC;MAC9CP,QAAQ,CAAC,0CAA0C,CAAC;MACpDE,YAAY,CAAC,KAAK,CAAC;MACnB;IACF;IAEAc,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC,CAAC,CAAC;;IAEnB,IAAI,CAACP,QAAQ,CAACW,EAAE,EAAE;MAChBhB,YAAY,CAAC,KAAK,CAAC;MACnBF,QAAQ,CAACc,IAAI,CAACf,KAAK,IAAI,sBAAsB,CAAC;IAChD,CAAC,MAAM;MACLoB,YAAY,CAACC,OAAO,CAAC,MAAM,EAAER,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC;MAClDX,QAAQ,CAAC;QAAEkB,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAER;MAAK,CAAC,CAAC;MAC1CZ,YAAY,CAAC,KAAK,CAAC;IACrB;EACA,CAAC;AAAE,CAAC;AAAAJ,EAAA,CAnCKD,SAAS;EAAA,QAGCD,cAAc;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}