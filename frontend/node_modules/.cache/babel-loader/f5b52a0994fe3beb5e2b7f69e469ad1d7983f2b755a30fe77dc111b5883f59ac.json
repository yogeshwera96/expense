{"ast":null,"code":"import React,{useContext,useState,createContext}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const GlobalContext=/*#__PURE__*/createContext();export const useGlobalContext=()=>{return useContext(GlobalContext);};export const GlobalProvider=_ref=>{let{children}=_ref;const[isAuthenticated,setIsAuthenticated]=useState(false);const[isSignup,setIsSignup]=useState(false);// Toggle between Login and Signup\nreturn/*#__PURE__*/_jsx(GlobalContext.Provider,{value:{isAuthenticated,setIsAuthenticated,isSignup,setIsSignup},children:children});};","map":{"version":3,"names":["React","useContext","useState","createContext","jsx","_jsx","GlobalContext","useGlobalContext","GlobalProvider","_ref","children","isAuthenticated","setIsAuthenticated","isSignup","setIsSignup","Provider","value"],"sources":["C:/Users/yoges/OneDrive/Desktop/Expenses Tracker/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { useContext, useState, createContext } from 'react';\r\n\r\nconst GlobalContext = createContext();\r\n\r\nexport const useGlobalContext = () => {\r\n  return useContext(GlobalContext);\r\n};\r\n\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [isSignup, setIsSignup] = useState(false); // Toggle between Login and Signup\r\n\r\n  return (\r\n    <GlobalContext.Provider value={{ isAuthenticated, setIsAuthenticated, isSignup, setIsSignup }}>\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,UAAU,CAAEC,QAAQ,CAAEC,aAAa,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEnE,KAAM,CAAAC,aAAa,cAAGH,aAAa,CAAC,CAAC,CAErC,MAAO,MAAM,CAAAI,gBAAgB,CAAGA,CAAA,GAAM,CACpC,MAAO,CAAAN,UAAU,CAACK,aAAa,CAAC,CAClC,CAAC,CAED,MAAO,MAAM,CAAAE,cAAc,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACzC,KAAM,CAACE,eAAe,CAAEC,kBAAkB,CAAC,CAAGV,QAAQ,CAAC,KAAK,CAAC,CAC7D,KAAM,CAACW,QAAQ,CAAEC,WAAW,CAAC,CAAGZ,QAAQ,CAAC,KAAK,CAAC,CAAE;AAEjD,mBACEG,IAAA,CAACC,aAAa,CAACS,QAAQ,EAACC,KAAK,CAAE,CAAEL,eAAe,CAAEC,kBAAkB,CAAEC,QAAQ,CAAEC,WAAY,CAAE,CAAAJ,QAAA,CAC3FA,QAAQ,CACa,CAAC,CAE7B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}