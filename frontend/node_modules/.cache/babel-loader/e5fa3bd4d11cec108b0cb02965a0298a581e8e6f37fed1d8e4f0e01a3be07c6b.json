{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yoges\\\\OneDrive\\\\Desktop\\\\Expenses Tracker\\\\frontend\\\\src\\\\context\\\\globalContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:5000/api/v1/\";\nconst GlobalContext = /*#__PURE__*/React.createContext();\nexport const GlobalProvider = ({\n  children\n}) => {\n  _s();\n  const [incomes, setIncomes] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [error, setError] = useState(null);\n\n  //calculate incomes\n  const addIncome = async income => {\n    const response = await axios.post(`${BASE_URL}add-income`, income).catch(err => {\n      setError(err.response.data.message);\n    });\n    getIncomes();\n  };\n  const getIncomes = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}get-incomes`);\n      setIncomes(response.data);\n    } catch (error) {\n      if (error.response) {\n        // Server responded with a status other than 200 range\n        console.error('Response error:', error.response.data);\n      } else if (error.request) {\n        // Request was made but no response was received\n        console.error('No response received:', error.request);\n      } else {\n        // Other errors (network issues, etc.)\n        console.error('Network error:', error.message);\n      }\n    }\n  };\n  const deleteIncome = async id => {\n    const res = await axios.delete(`${BASE_URL}delete-income/${id}`);\n    getIncomes();\n  };\n  const totalIncome = () => {\n    let totalIncome = 0;\n    incomes.forEach(income => {\n      totalIncome = totalIncome + income.amount;\n    });\n    return totalIncome;\n  };\n\n  //calculate incomes\n  const addExpense = async income => {\n    const response = await axios.post(`${BASE_URL}add-expense`, income).catch(err => {\n      setError(err.response.data.message);\n    });\n    getExpenses();\n  };\n  const getExpenses = async () => {\n    const response = await axios.get(`${BASE_URL}get-expenses`);\n    setExpenses(response.data);\n    console.log(response.data);\n  };\n  const deleteExpense = async id => {\n    const res = await axios.delete(`${BASE_URL}delete-expense/${id}`);\n    getExpenses();\n  };\n  const totalExpenses = () => {\n    let totalIncome = 0;\n    expenses.forEach(income => {\n      totalIncome = totalIncome + income.amount;\n    });\n    return totalIncome;\n  };\n  const totalBalance = () => {\n    return totalIncome() - totalExpenses();\n  };\n  const transactionHistory = () => {\n    const history = [...incomes, ...expenses];\n    history.sort((a, b) => {\n      return new Date(b.createdAt) - new Date(a.createdAt);\n    });\n    return history.slice(0, 3);\n  };\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      addIncome,\n      getIncomes,\n      incomes,\n      deleteIncome,\n      expenses,\n      totalIncome,\n      addExpense,\n      getExpenses,\n      deleteExpense,\n      totalExpenses,\n      totalBalance,\n      transactionHistory,\n      error,\n      setError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n};\n_s(GlobalProvider, \"tEtYkz3TSUkMCKA3FBENwBvPpJ4=\");\n_c = GlobalProvider;\nexport const useGlobalContext = () => {\n  _s2();\n  return useContext(GlobalContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"names":["React","useContext","useState","axios","jsxDEV","_jsxDEV","BASE_URL","GlobalContext","createContext","GlobalProvider","children","_s","incomes","setIncomes","expenses","setExpenses","error","setError","addIncome","income","response","post","catch","err","data","message","getIncomes","get","console","request","deleteIncome","id","res","delete","totalIncome","forEach","amount","addExpense","getExpenses","log","deleteExpense","totalExpenses","totalBalance","transactionHistory","history","sort","a","b","Date","createdAt","slice","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGlobalContext","_s2","$RefreshReg$"],"sources":["C:/Users/yoges/OneDrive/Desktop/Expenses Tracker/frontend/src/context/globalContext.js"],"sourcesContent":["import React, { useContext, useState } from \"react\"\r\nimport axios from 'axios'\r\n\r\n\r\nconst BASE_URL = \"http://localhost:5000/api/v1/\";\r\n\r\n\r\nconst GlobalContext = React.createContext()\r\n\r\nexport const GlobalProvider = ({children}) => {\r\n\r\n    const [incomes, setIncomes] = useState([])\r\n    const [expenses, setExpenses] = useState([])\r\n    const [error, setError] = useState(null)\r\n\r\n    //calculate incomes\r\n    const addIncome = async (income) => {\r\n        const response = await axios.post(`${BASE_URL}add-income`, income)\r\n            .catch((err) =>{\r\n                setError(err.response.data.message)\r\n            })\r\n        getIncomes()\r\n    }\r\n\r\n    const getIncomes = async () => {\r\n        try {\r\n            const response = await axios.get(`${BASE_URL}get-incomes`);\r\n            setIncomes(response.data);\r\n        } catch (error) {\r\n            if (error.response) {\r\n                // Server responded with a status other than 200 range\r\n                console.error('Response error:', error.response.data);\r\n            } else if (error.request) {\r\n                // Request was made but no response was received\r\n                console.error('No response received:', error.request);\r\n            } else {\r\n                // Other errors (network issues, etc.)\r\n                console.error('Network error:', error.message);\r\n            }\r\n        }\r\n    };\r\n    \r\n\r\n    const deleteIncome = async (id) => {\r\n        const res  = await axios.delete(`${BASE_URL}delete-income/${id}`)\r\n        getIncomes()\r\n    }\r\n\r\n    const totalIncome = () => {\r\n        let totalIncome = 0;\r\n        incomes.forEach((income) =>{\r\n            totalIncome = totalIncome + income.amount\r\n        })\r\n\r\n        return totalIncome;\r\n    }\r\n\r\n\r\n    //calculate incomes\r\n    const addExpense = async (income) => {\r\n        const response = await axios.post(`${BASE_URL}add-expense`, income)\r\n            .catch((err) =>{\r\n                setError(err.response.data.message)\r\n            })\r\n        getExpenses()\r\n    }\r\n\r\n    const getExpenses = async () => {\r\n        const response = await axios.get(`${BASE_URL}get-expenses`)\r\n        setExpenses(response.data)\r\n        console.log(response.data)\r\n    }\r\n\r\n    const deleteExpense = async (id) => {\r\n        const res  = await axios.delete(`${BASE_URL}delete-expense/${id}`)\r\n        getExpenses()\r\n    }\r\n\r\n    const totalExpenses = () => {\r\n        let totalIncome = 0;\r\n        expenses.forEach((income) =>{\r\n            totalIncome = totalIncome + income.amount\r\n        })\r\n\r\n        return totalIncome;\r\n    }\r\n\r\n\r\n    const totalBalance = () => {\r\n        return totalIncome() - totalExpenses()\r\n    }\r\n\r\n    const transactionHistory = () => {\r\n        const history = [...incomes, ...expenses]\r\n        history.sort((a, b) => {\r\n            return new Date(b.createdAt) - new Date(a.createdAt)\r\n        })\r\n\r\n        return history.slice(0, 3)\r\n    }\r\n\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{\r\n            addIncome,\r\n            getIncomes,\r\n            incomes,\r\n            deleteIncome,\r\n            expenses,\r\n            totalIncome,\r\n            addExpense,\r\n            getExpenses,\r\n            deleteExpense,\r\n            totalExpenses,\r\n            totalBalance,\r\n            transactionHistory,\r\n            error,\r\n            setError\r\n        }}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useGlobalContext = () =>{\r\n    return useContext(GlobalContext)\r\n}"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGzB,MAAMC,QAAQ,GAAG,+BAA+B;AAGhD,MAAMC,aAAa,gBAAGP,KAAK,CAACQ,aAAa,CAAC,CAAC;AAE3C,OAAO,MAAMC,cAAc,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAE1C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAMgB,SAAS,GAAG,MAAOC,MAAM,IAAK;IAChC,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAAC,GAAGf,QAAQ,YAAY,EAAEa,MAAM,CAAC,CAC7DG,KAAK,CAAEC,GAAG,IAAI;MACXN,QAAQ,CAACM,GAAG,CAACH,QAAQ,CAACI,IAAI,CAACC,OAAO,CAAC;IACvC,CAAC,CAAC;IACNC,UAAU,CAAC,CAAC;EAChB,CAAC;EAED,MAAMA,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACA,MAAMN,QAAQ,GAAG,MAAMjB,KAAK,CAACwB,GAAG,CAAC,GAAGrB,QAAQ,aAAa,CAAC;MAC1DO,UAAU,CAACO,QAAQ,CAACI,IAAI,CAAC;IAC7B,CAAC,CAAC,OAAOR,KAAK,EAAE;MACZ,IAAIA,KAAK,CAACI,QAAQ,EAAE;QAChB;QACAQ,OAAO,CAACZ,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAACI,QAAQ,CAACI,IAAI,CAAC;MACzD,CAAC,MAAM,IAAIR,KAAK,CAACa,OAAO,EAAE;QACtB;QACAD,OAAO,CAACZ,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACa,OAAO,CAAC;MACzD,CAAC,MAAM;QACH;QACAD,OAAO,CAACZ,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACS,OAAO,CAAC;MAClD;IACJ;EACJ,CAAC;EAGD,MAAMK,YAAY,GAAG,MAAOC,EAAE,IAAK;IAC/B,MAAMC,GAAG,GAAI,MAAM7B,KAAK,CAAC8B,MAAM,CAAC,GAAG3B,QAAQ,iBAAiByB,EAAE,EAAE,CAAC;IACjEL,UAAU,CAAC,CAAC;EAChB,CAAC;EAED,MAAMQ,WAAW,GAAGA,CAAA,KAAM;IACtB,IAAIA,WAAW,GAAG,CAAC;IACnBtB,OAAO,CAACuB,OAAO,CAAEhB,MAAM,IAAI;MACvBe,WAAW,GAAGA,WAAW,GAAGf,MAAM,CAACiB,MAAM;IAC7C,CAAC,CAAC;IAEF,OAAOF,WAAW;EACtB,CAAC;;EAGD;EACA,MAAMG,UAAU,GAAG,MAAOlB,MAAM,IAAK;IACjC,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAAC,GAAGf,QAAQ,aAAa,EAAEa,MAAM,CAAC,CAC9DG,KAAK,CAAEC,GAAG,IAAI;MACXN,QAAQ,CAACM,GAAG,CAACH,QAAQ,CAACI,IAAI,CAACC,OAAO,CAAC;IACvC,CAAC,CAAC;IACNa,WAAW,CAAC,CAAC;EACjB,CAAC;EAED,MAAMA,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMlB,QAAQ,GAAG,MAAMjB,KAAK,CAACwB,GAAG,CAAC,GAAGrB,QAAQ,cAAc,CAAC;IAC3DS,WAAW,CAACK,QAAQ,CAACI,IAAI,CAAC;IAC1BI,OAAO,CAACW,GAAG,CAACnB,QAAQ,CAACI,IAAI,CAAC;EAC9B,CAAC;EAED,MAAMgB,aAAa,GAAG,MAAOT,EAAE,IAAK;IAChC,MAAMC,GAAG,GAAI,MAAM7B,KAAK,CAAC8B,MAAM,CAAC,GAAG3B,QAAQ,kBAAkByB,EAAE,EAAE,CAAC;IAClEO,WAAW,CAAC,CAAC;EACjB,CAAC;EAED,MAAMG,aAAa,GAAGA,CAAA,KAAM;IACxB,IAAIP,WAAW,GAAG,CAAC;IACnBpB,QAAQ,CAACqB,OAAO,CAAEhB,MAAM,IAAI;MACxBe,WAAW,GAAGA,WAAW,GAAGf,MAAM,CAACiB,MAAM;IAC7C,CAAC,CAAC;IAEF,OAAOF,WAAW;EACtB,CAAC;EAGD,MAAMQ,YAAY,GAAGA,CAAA,KAAM;IACvB,OAAOR,WAAW,CAAC,CAAC,GAAGO,aAAa,CAAC,CAAC;EAC1C,CAAC;EAED,MAAME,kBAAkB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,OAAO,GAAG,CAAC,GAAGhC,OAAO,EAAE,GAAGE,QAAQ,CAAC;IACzC8B,OAAO,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MACnB,OAAO,IAAIC,IAAI,CAACD,CAAC,CAACE,SAAS,CAAC,GAAG,IAAID,IAAI,CAACF,CAAC,CAACG,SAAS,CAAC;IACxD,CAAC,CAAC;IAEF,OAAOL,OAAO,CAACM,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9B,CAAC;EAGD,oBACI7C,OAAA,CAACE,aAAa,CAAC4C,QAAQ;IAACC,KAAK,EAAE;MAC3BlC,SAAS;MACTQ,UAAU;MACVd,OAAO;MACPkB,YAAY;MACZhB,QAAQ;MACRoB,WAAW;MACXG,UAAU;MACVC,WAAW;MACXE,aAAa;MACbC,aAAa;MACbC,YAAY;MACZC,kBAAkB;MAClB3B,KAAK;MACLC;IACJ,CAAE;IAAAP,QAAA,EACGA;EAAQ;IAAA2C,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAEjC,CAAC;AAAA7C,EAAA,CAjHYF,cAAc;AAAAgD,EAAA,GAAdhD,cAAc;AAmH3B,OAAO,MAAMiD,gBAAgB,GAAGA,CAAA,KAAK;EAAAC,GAAA;EACjC,OAAO1D,UAAU,CAACM,aAAa,CAAC;AACpC,CAAC;AAAAoD,GAAA,CAFYD,gBAAgB;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}